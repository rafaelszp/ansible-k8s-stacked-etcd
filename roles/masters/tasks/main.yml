---
# tasks file for masters

- name: Check if kubernetes is configured properly
  delegate_to: "{{ groups.masters[0] }}"
  command:
    kubectl cluster-info
  register: cluster_info
  changed_when: "'is running at' not in cluster_info.stdout"
  ignore_errors: true

- name: Install master
  include: install.yml
  when: cluster_info is failed

- name: include master ha tasks
  include: ha.yml
  when: ( groups.masters | length > 1 ) and inventory_hostname != groups.masters[0]  and cluster_info is failed

- name: Include helm task
  include: helm.yml

- name: Include linkerd
  include: linkerd.yml

- name: Getting labels
  delegate_to: "{{groups.masters[0]}}"
  shell: "kubectl get nodes {{ansible_hostname}} --show-labels"
  register: get_labels
  changed_when: false

- debug: msg="{{(get_labels.stdout_lines |join(' '))}}"

- name: Including labels
  delegate_to: "{{groups.masters[0]}}"
  shell: kubectl label nodes {{ansible_hostname}} k8s_role_{{item}}={{item}}
  with_items: "{{k8s_roles}}"
  when: 
    - (get_labels.stdout_lines |join(' ')) is not match('.*?k8s_role_.*?')
  register: include_labels


- name: Checking if local-storage StorageClass is Present
  command: kubectl get sc 
  register: get_storageclass
  changed_when: false

- debug: var=get_storageclass.stdout_lines
  when: get_storageclass.stdout_lines is defined

- name: Copy StorageClass config
  when: get_storageclass.stdout.find('local-storage') == -1
  copy: 
    src: local-storageclass.yml
    dest: /etc/kubernetes/local-storageclass.yml

- name: Installing local-storageclass
  when: get_storageclass.stdout.find('local-storage') == -1
  script: patch-localstorage.sh    
  register: lcs_out

- debug: var=lcs_out.stdout_lines
  when: lcs_out.stdout_lines is defined

#lcs_out.stdout_lines
