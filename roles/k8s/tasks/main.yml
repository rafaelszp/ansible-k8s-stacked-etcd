---
# tasks file for k8s
- name: 'check if docker is installed'
  command: docker version
  ignore_errors: true
  register: check_docker
  changed_when: false

- name: 'Importing geerlingguy.docker role'
  import_role:
    name: geerlingguy.docker
  when: "check_docker is failed"

- name: 'changing docker from cgroups to systemd'
  shell: |
    cat > /etc/docker/daemon.json <<EOF
    {
      "exec-opts": ["native.cgroupdriver=systemd"],
      "log-driver": "json-file",
      "log-opts": {
        "max-size": "100m"
      },
      "storage-driver": "overlay2",
      "storage-opts": [
        "overlay2.override_kernel_check=true"
      ]
    }
    EOF
  when: "check_docker is failed"

- name: Reload systemd unit if args were changed.
  systemd:
    daemon_reload: true

- name: 'Restarting docker'
  service:
    name: docker
    state: restarted

- name: Prepare centos
  import_tasks: pre-centos.yml
    
- name: Installing kubeadm
  package:
    name: 
      - kubeadm-{{KUBERNETES_VERSION}}
      - kubelet-{{KUBERNETES_VERSION}}
      - kubectl-{{KUBERNETES_VERSION}}
      - bash-completion
      - vim
    state: present

# - name: 'Setting fact only if not in masters'
#   set_fact:
#     cgroups_var: "{{ (inventory_hostname not in groups['masters'] and \"--cgroup-driver=systemd\") or '' }}"

- name: Listing groups will have config.yaml
  set_fact: 
    nodes_list: "{{ groups.workers + groups.devops }}"

- debug: var=nodes_list

# - name: Creating /var/lib/kubelet 
#   delegate_to: "{{item}}"
#   file:
#     path: /var/lib/kubelet
#     state: directory
#   with_items: "{{nodes_list}}"

# - name: Setting cgroup driver for non-masters
#   delegate_to: "{{item}}"
#   template: 
#     src: config.yaml
#     dest: /var/lib/kubelet/config.yaml
#     force: yes
#   with_items: "{{nodes_list}}"

- name: ensure kubelet env KUBELET_EXTRA_ARGS is set
  lineinfile:
    path: '/etc/sysconfig/kubelet'
    regexp: '^KUBELET_EXTRA_ARGS.*'
    line: 'KUBELET_EXTRA_ARGS="--node-ip={{ ansible_host | default(ansible_default_ipv4.address) }}"'
  register: kubernetes_systemd_register

- debug: var=kubernetes_systemd_register

- name: Reload systemd unit if args were changed.
  systemd:
    daemon_reload: true
  when: kubernetes_systemd_register is changed

- name: Creating kubectl alias
  lineinfile:
    path: /etc/bashrc
    line: "alias kc=kubectl"
    state: present
    insertafter: EOF
    create: yes

- name: Creating kubectl -n kube-system alias
  lineinfile:
    path: /etc/bashrc
    line: "alias kcs='kubectl -n kube-system'"
    state: present
    insertafter: EOF
    create: yes

- name: Creating kubectl config set-context $(kubectl config current-context) --namespace alias
  lineinfile:
    path: /etc/bashrc
    line: "alias chns='kubectl config set-context $(kubectl config current-context) --namespace '"
    state: present
    insertafter: EOF
    create: yes

- name: Creating bash-completion config
  lineinfile:
    path: /root/.bashrc
    state: present
    insertafter: EOF
    create: yes
    line: "source <(kubectl completion bash)"
